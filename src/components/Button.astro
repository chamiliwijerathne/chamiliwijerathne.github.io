---
import type { ButtonVariant } from "../types";

interface Props {
  text: string;
  href?: {
    url: string;
    label?: string;
    targetBlank?: boolean;
  };
  type?: ButtonVariant;
  className?: string;
  style?: {
    roundedFull?: boolean;
  };
}

const { text, href, type = "primary", className, style } = Astro.props;

const baseClass = `px-6 py-2 font-bold cursor-pointer transition duration-200 transform active:scale-95 ${
  style?.roundedFull ? "rounded-full" : "rounded-lg"
}`;

const typeClassMap: Record<ButtonVariant, string> = {
  primary:
    "bg-primary-500 font-bold hover:bg-primary-700 active:bg-primary-700",
  secondary: "border-2 hover:bg-neutral-700 active:bg-neutral-700",
  tertiary: "",
};

const classes = `${baseClass} ${typeClassMap[type]} ${className || ""}`.trim();
---

<button class={classes}>
  {
    href ? (
      <a
        href={href.url}
        target={href.targetBlank ? "_blank" : "_self"}
        rel={href.targetBlank ? "noopener noreferrer" : undefined}
      >
        {href.label || text}
      </a>
    ) : (
      <span>{text}</span>
    )
  }
</button>
